{"version":3,"sources":["Conponents/button/Button.js","Conponents/imageGalleryItem/imageGalleryItem/ImageGalleryItem.js","Conponents/imageGalleryItem/ImageGalleryList.js","Conponents/loader/Loader.js","Conponents/modal/Modal.js","Conponents/searchbar/Searchbar.js","Conponents/imageGallery/ImageGallery.js","index.js"],"names":["Button","showMore","className","type","onClick","ImageGalleryItem","image","largeImgHendler","id","data-source","largeImageURL","src","webformatURL","alt","ImageGalleryList","images","map","App","LoaderWrapper","color","height","width","timeout","React","Component","styled","div","modalRoot","document","getElementById","Modal","handleClose","e","code","props","onClose","currentTarget","target","window","addEventListener","this","removeEventListener","open","largeImg","createPortal","defaultProps","Searchbar","state","imageQuery","onHandlerSubmit","preventDefault","onSubmit","onHandlerChange","name","value","setState","onChange","placeholder","API","URL","filterResults","ImageGallery","shoModal","loader","query","page","error","perPage","axiosData","a","axios","get","data","prevState","hits","console","log","scrollTo","top","documentElement","scrollHeight","behavior","formSubmit","prevSt","dataset","source","hendelTogalModal","prevProps","length","ReactDOM","render","querySelector"],"mappings":"4SAUeA,EATA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhB,OACE,wBAAQC,UAAU,SAASC,KAAK,SAASC,QAASH,EAAlD,wBCcWI,EAjBU,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBAEjC,OACE,mCACE,oBAAIC,GAAIF,EAAME,GAAIN,UAAU,mBAA5B,SACE,qBACEE,QAASG,EACTE,cAAaH,EAAMI,cACnBC,IAAKL,EAAMM,aACXC,IAAKP,EAAMH,KACXD,UAAU,gCCMLY,EAdU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQR,EAAsB,EAAtBA,gBAClC,OACE,oBAAIL,UAAU,eAAd,gBACGa,QADH,IACGA,OADH,EACGA,EAAQC,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CACEA,MAAOA,EAEPC,gBAAiBA,GADZD,EAAME,U,yCCJAS,E,4JACnB,WACE,OACE,cAACC,EAAD,UACE,cAAC,IAAD,CACEf,KAAK,OACLgB,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,Y,GATcC,IAAMC,WAejCN,EAAgBO,IAAOC,IAAV,mHChBbC,EAAYC,SAASC,eAAe,cAEpCC,E,4MAeJC,YAAc,SAACC,GACE,WAAXA,EAAEC,MACJ,EAAKC,MAAMC,UAETH,EAAEI,gBAAkBJ,EAAEK,QACxB,EAAKH,MAAMC,W,uDAZf,WACEG,OAAOC,iBAAiB,UAAWC,KAAKT,e,kCAE1C,WACEO,OAAOG,oBAAoB,UAAWD,KAAKT,e,oBAY7C,WACE,MAA2BS,KAAKN,MAAxBQ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SACd,OAAOC,uBACLF,EACE,qBAAKxC,UAAU,UAAUE,QAASoC,KAAKT,YAAvC,SACE,qBAAK7B,UAAU,QAAf,SACE,qBAAKS,IAAKgC,EAAU9B,IAAI,SAG1B,KACJc,O,GAlCcH,aAAdM,EACGe,aAAe,CACpBH,MAAM,GAqCKZ,Q,QCRAgB,E,4MAnCbC,MAAQ,CAAEC,WAAY,I,EACtBC,gBAAkB,SAACjB,GACjBA,EAAEkB,iBACF,EAAKhB,MAAMiB,SAAS,EAAKJ,MAAMC,a,EAEjCI,gBAAkB,SAACpB,GACjB,MAAwBA,EAAEK,OAAlBgB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,4CAG1B,WACE,OACE,mCACE,wBAAQpD,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaiD,SAAUX,KAAKS,gBAA5C,UACE,wBAAQ9C,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEsD,SAAUhB,KAAKY,gBACflD,UAAU,mBACVC,KAAK,OAGLsD,YAAY,2BACZJ,KAAK,0B,GA3BK7B,aCOlBkC,EAAG,qCACHC,EAAG,2BACHC,EAAa,+BAiGJC,E,4MA9Fbd,MAAQ,CACNe,UAAU,EACV/C,OAAQ,GACRgD,QAAQ,EACRC,MAAO,GACPC,KAAM,EACNC,MAAO,KACPvB,SAAU,GACVwB,QAAS,I,EAcXC,U,sBAAY,sCAAAC,EAAA,6DACV,EAAKd,SAAS,CAAEQ,QAAQ,IADd,EAEuB,EAAKhB,MAA9BiB,EAFE,EAEFA,MAAOC,EAFL,EAEKA,KAAME,EAFX,EAEWA,QAFX,kBAIeG,IAAMC,IAAN,UAClBZ,EADkB,cACTK,EADS,iBACKC,EADL,gBACiBP,EADjB,uBACmCE,EADnC,qBAC6DO,IAL5E,gBAIAK,EAJA,EAIAA,KAGR,EAAKjB,UAAS,SAACkB,GAAD,MAAgB,CAC5B1D,OAAO,GAAD,mBAAM0D,EAAU1D,QAAhB,YAA2ByD,EAAKE,WAExCC,QAAQC,IAAR,uBAA4BZ,EAA5B,qBAA8CC,EAA9C,MAVQ,kDAYRU,QAAQC,IAAR,MAZQ,yBAcR,EAAKrB,UAAS,SAACkB,GAAD,MAAgB,CAC5BV,QAAQ,MAGN,EAAKhB,MAAMkB,KAAO,GACpB3B,OAAOuC,SAAS,CACdC,IAAKlD,SAASmD,gBAAgBC,aAC9BC,SAAU,WArBN,6E,EA2BZC,WAAa,SAAClB,GACZ,EAAKT,SAAS,CAAES,MAAO,GAAIC,KAAM,EAAGlD,OAAQ,KAC5C,EAAKwC,SAAS,CAAES,MAAOA,EAAOC,KAAM,EAAGlD,OAAQ,M,EAGjDd,SAAW,WACT0E,QAAQC,IAAI,YACZ,EAAKrB,UAAS,SAAC4B,GAAD,MAAa,CAAElB,KAAMkB,EAAOlB,KAAO,O,EAGnD1D,gBAAkB,SAACyB,GACjB,IAAMtB,EAAgBsB,EAAEK,OAAO+C,QAAQC,OACvC,EAAK9B,SAAS,CAAEZ,SAAUjC,IAC1B,EAAK4E,oB,EAEPA,iBAAmB,WACjB,EAAK/B,UAAS,SAAC4B,GAAD,MAAa,CAAErB,UAAWqB,EAAOrB,c,wDAtDjD,SAAmByB,EAAWd,GAC5B,MAAwBjC,KAAKO,MAArBiB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACXD,IAAUS,EAAUT,OAAmB,KAAVA,GAC/BW,QAAQC,IAAI,aAAcZ,GAC1BxB,KAAK4B,aACIJ,IAAUS,EAAUT,OAASC,IAASQ,EAAUR,OACzDU,QAAQC,IAAR,sCAA2CX,EAA3C,UACAzB,KAAK4B,e,oBAiDT,WACE,MAA+C5B,KAAKO,MAA5ChC,EAAR,EAAQA,OAAQ+C,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,OAAQpB,EAAlC,EAAkCA,SAClC,OACE,qCACE,cAAC,EAAD,CAAWQ,SAAUX,KAAK0C,aAEzBnB,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CACEhD,OAAQA,EACRR,gBAAiBiC,KAAKjC,kBAGzBQ,EAAOyE,OAAS,GAAK,cAAC,EAAD,CAAQvF,SAAUuC,KAAKvC,WAE7C,cAAC,EAAD,CACEyC,KAAMoB,EACN3B,QAASK,KAAK8C,iBACd3C,SAAUA,EACVoB,OAAQA,W,GAxFSvC,a,MCP3BiE,IAASC,OAAO,cAAC,EAAD,IAAkB9D,SAAS+D,cAAc,Y","file":"static/js/main.7c846622.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Button = ({ showMore }) => {\r\n\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={showMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nconst ImageGalleryItem = ({ image, largeImgHendler }) => {\r\n    \r\n  return (\r\n    <>\r\n      <li id={image.id} className=\"ImageGalleryItem\">\r\n        <img\r\n          onClick={largeImgHendler}\r\n          data-source={image.largeImageURL}\r\n          src={image.webformatURL}\r\n          alt={image.type}\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","\r\nimport React from 'react'\r\nimport ImageGalleryItem from './imageGalleryItem/ImageGalleryItem';\r\nconst ImageGalleryList = ({ images, largeImgHendler }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images?.map((image) => (\r\n        <ImageGalleryItem\r\n          image={image}\r\n          key={image.id}\r\n          largeImgHendler={largeImgHendler}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryList;","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <LoaderWrapper>\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </LoaderWrapper>\r\n    );\r\n  }\r\n}\r\nconst LoaderWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nclass Modal extends Component {\r\n  static defaultProps = {\r\n    open: false,\r\n  };\r\n  static propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleClose);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleClose);\r\n  }\r\n\r\n  handleClose = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { open, largeImg } = this.props;\r\n    return createPortal(\r\n      open ? (\r\n        <div className=\"Overlay\" onClick={this.handleClose}>\r\n          <div className=\"Modal\">\r\n            <img src={largeImg} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      ) : null,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nclass Searchbar extends Component {\r\n  state = { imageQuery: '' };\r\n  onHandlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.imageQuery);\r\n  };\r\n  onHandlerChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n    \r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={this.onHandlerSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              onChange={this.onHandlerChange}\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              // autocomplete=\"off\"\r\n              // autofocus\r\n              placeholder=\"Search images and photos\"\r\n              name=\"imageQuery\"\r\n            />\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Button from \"../button/Button\";\r\nimport ImageGalleryList from \"../imageGalleryItem/ImageGalleryList\";\r\nimport Loader from \"../loader/Loader\";\r\nimport Modal from \"../modal/Modal\";\r\nimport Searchbar from \"../searchbar/Searchbar\";\r\n\r\nconst API = `21146300-df17acb11e029d73c17341eff`;\r\nconst URL = `https://pixabay.com/api/`;\r\nconst filterResults = `photo&orientation=horizontal`;\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    shoModal: false,\r\n    images: [],\r\n    loader: false,\r\n    query: \"\",\r\n    page: 1,\r\n    error: null,\r\n    largeImg: \"\",\r\n    perPage: 12,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { query, page } = this.state;\r\n    if (query !== prevState.query && query !== \"\") {\r\n      console.log(\" new query\", query);\r\n      this.axiosData();\r\n    } else if (query === prevState.query && page !== prevState.page) {\r\n      console.log(`new page axiosData in, page ${page} page`);\r\n      this.axiosData();\r\n    }\r\n  }\r\n\r\n  axiosData = async () => {\r\n    this.setState({ loader: true });\r\n    const { query, page, perPage } = this.state;\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${URL}?q=${query}&page=${page}&key=${API}&image_type=${filterResults}&per_page=${perPage}`\r\n      );\r\n      this.setState((prevState) => ({\r\n        images: [...prevState.images, ...data.hits],\r\n      }));\r\n      console.log(`axiosData by ${query} in  page ${page} `);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState((prevState) => ({\r\n        loader: false,\r\n      }));\r\n\r\n      if (this.state.page > 1) {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  formSubmit = (query) => {\r\n    this.setState({ query: \"\", page: 1, images: [] });\r\n    this.setState({ query: query, page: 1, images: [] });\r\n  };\r\n\r\n  showMore = () => {\r\n    console.log(\"showMore\");\r\n    this.setState((prevSt) => ({ page: prevSt.page + 1 }));\r\n  };\r\n\r\n  largeImgHendler = (e) => {\r\n    const largeImageURL = e.target.dataset.source;\r\n    this.setState({ largeImg: largeImageURL });\r\n    this.hendelTogalModal();\r\n  };\r\n  hendelTogalModal = () => {\r\n    this.setState((prevSt) => ({ shoModal: !prevSt.shoModal }));\r\n  };\r\n  render() {\r\n    const { images, shoModal, loader, largeImg } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.formSubmit} />\r\n\r\n        {loader ? (\r\n          <Loader />\r\n        ) : (\r\n          <ImageGalleryList\r\n            images={images}\r\n            largeImgHendler={this.largeImgHendler}\r\n          />\r\n        )}\r\n        {images.length > 0 && <Button showMore={this.showMore} />}\r\n\r\n        <Modal\r\n          open={shoModal}\r\n          onClose={this.hendelTogalModal}\r\n          largeImg={largeImg}\r\n          loader={loader}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ImageGallery from \"./Conponents/imageGallery/ImageGallery\";\r\nimport './style.css'\r\n\r\nReactDOM.render(<ImageGallery />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}